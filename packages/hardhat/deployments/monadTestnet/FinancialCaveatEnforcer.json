{
  "address": "0xa63Bf373ADF07f6C2d6ea9c0C77309959AbDcfa6",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnableInvalidOwner",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OwnableUnauthorizedAccount",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "periodLength",
          "type": "uint256"
        }
      ],
      "name": "SpendingLimitSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        }
      ],
      "name": "TimeLimitSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenSpent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "TokenWhitelistSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxTransferAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "TransferLimitSet",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "terms",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "executionCalldata",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        }
      ],
      "name": "afterHook",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allowedTokens",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "terms",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "executionCalldata",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        }
      ],
      "name": "beforeHook",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        }
      ],
      "name": "getAllowedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        }
      ],
      "name": "getSpendingLimit",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "spentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "periodLength",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentPeriod",
              "type": "uint256"
            }
          ],
          "internalType": "struct FinancialCaveatEnforcer.SpendingLimit",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        }
      ],
      "name": "getTimeLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        }
      ],
      "name": "getTransferLimit",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "maxTransferAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "dailyLimit",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "usedToday",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lastResetDay",
              "type": "uint256"
            }
          ],
          "internalType": "struct FinancialCaveatEnforcer.TransferLimit",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "isTokenWhitelisted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        }
      ],
      "name": "setDefaultFinancialConfig",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validUntilTime",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodLengthSeconds",
          "type": "uint256"
        }
      ],
      "name": "setSpendingLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "validUntilTime",
          "type": "uint256"
        }
      ],
      "name": "setTimeLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "internalType": "address[]",
          "name": "tokens",
          "type": "address[]"
        }
      ],
      "name": "setTokenWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "delegationHash",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxTransferAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dailyLimit",
          "type": "uint256"
        }
      ],
      "name": "setTransferLimit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "spendingLimits",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "spentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "validUntil",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "periodLength",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "currentPeriod",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "timeLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "transferLimits",
      "outputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "maxTransferAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dailyLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "usedToday",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lastResetDay",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x00c0ce39d99d426a6d3f9f6634bc68c6e50c571ac40744d0609a62df3a9877d0",
  "receipt": {
    "to": null,
    "from": "0x9bF68A0f0be9A9B6dCeb4D5675745c2f7cFb9483",
    "contractAddress": "0xa63Bf373ADF07f6C2d6ea9c0C77309959AbDcfa6",
    "transactionIndex": 3,
    "gasUsed": "1693507",
    "logsBloom": "0x
    "blockHash": "0x1a3afc697e741fa2c582955ba5224394b6e1cfd47fbe886004d41844e563355e",
    "transactionHash": "0x00c0ce39d99d426a6d3f9f6634bc68c6e50c571ac40744d0609a62df3a9877d0",
    "logs": [
      {
        "transactionIndex": 3,
        "blockNumber": 44185800,
        "transactionHash": "0x00c0ce39d99d426a6d3f9f6634bc68c6e50c571ac40744d0609a62df3a9877d0",
        "address": "0xa63Bf373ADF07f6C2d6ea9c0C77309959AbDcfa6",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000009bf68a0f0be9a9b6dceb4d5675745c2f7cfb9483"
        ],
        "data": "0x",
        "logIndex": 9,
        "blockHash": "0x1a3afc697e741fa2c582955ba5224394b6e1cfd47fbe886004d41844e563355e"
      }
    ],
    "blockNumber": 44185800,
    "cumulativeGasUsed": "2562055",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x9bF68A0f0be9A9B6dCeb4D5675745c2f7cFb9483"
  ],
  "numDeployments": 1,
  "solcInputHash": "ff740727392c95dbe8f9b1b72db3819d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.23+commit.f704f362\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"periodLength\",\"type\":\"uint256\"}],\"name\":\"SpendingLimitSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"name\":\"TimeLimitSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenSpent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"TokenWhitelistSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxTransferAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"dailyLimit\",\"type\":\"uint256\"}],\"name\":\"TransferLimitSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"terms\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"}],\"name\":\"afterHook\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allowedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"terms\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"executionCalldata\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"}],\"name\":\"beforeHook\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"}],\"name\":\"getAllowedTokens\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"}],\"name\":\"getSpendingLimit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentPeriod\",\"type\":\"uint256\"}],\"internalType\":\"struct FinancialCaveatEnforcer.SpendingLimit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"}],\"name\":\"getTimeLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"}],\"name\":\"getTransferLimit\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTransferAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usedToday\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastResetDay\",\"type\":\"uint256\"}],\"internalType\":\"struct FinancialCaveatEnforcer.TransferLimit\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"isTokenWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"}],\"name\":\"setDefaultFinancialConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntilTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodLengthSeconds\",\"type\":\"uint256\"}],\"name\":\"setSpendingLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"validUntilTime\",\"type\":\"uint256\"}],\"name\":\"setTimeLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"setTokenWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"delegationHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTransferAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyLimit\",\"type\":\"uint256\"}],\"name\":\"setTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"spendingLimits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"spentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"timeLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"transferLimits\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"maxTransferAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"dailyLimit\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usedToday\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastResetDay\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Wrapper for MetaMask's built-in financial caveat enforcers Provides a unified interface for financial restrictions (spending limits, token transfers, etc.)\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"afterHook(bytes,bytes,uint256,bytes,bytes32)\":{\"details\":\"ICaveatEnforcer afterHook implementation\"},\"beforeHook(bytes,bytes,uint256,bytes,bytes32)\":{\"details\":\"ICaveatEnforcer beforeHook implementation\"},\"getAllowedTokens(bytes32)\":{\"details\":\"Get allowed tokens for a delegation\"},\"getSpendingLimit(bytes32)\":{\"details\":\"Get spending limit for a delegation\"},\"getTimeLimit(bytes32)\":{\"details\":\"Get time limit for a delegation\"},\"getTransferLimit(bytes32)\":{\"details\":\"Get transfer limit for a delegation\"},\"isTokenWhitelisted(bytes32,address)\":{\"details\":\"Check if token is whitelisted for a delegation\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setDefaultFinancialConfig(bytes32)\":{\"details\":\"Set default financial configuration for a delegation Anyone can set default config for their own delegations\"},\"setSpendingLimit(bytes32,address,uint256,uint256,uint256)\":{\"details\":\"Set spending limit for a delegation Anyone can set spending limits for their own delegations\"},\"setTimeLimit(bytes32,uint256)\":{\"details\":\"Set time limit for a delegation Anyone can set time limits for their own delegations\"},\"setTokenWhitelist(bytes32,address[])\":{\"details\":\"Set token whitelist for a delegation Anyone can set token whitelist for their own delegations\"},\"setTransferLimit(bytes32,address,uint256,uint256)\":{\"details\":\"Set transfer limit for a delegation Anyone can set transfer limits for their own delegations\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"FinancialCaveatEnforcer\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/delegation/FinancialCaveatEnforcer.sol\":\"FinancialCaveatEnforcer\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.20;\\n\\nimport {Context} from \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * The initial owner is set to the address provided by the deployer. This can\\n * later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    /**\\n     * @dev The caller account is not authorized to perform an operation.\\n     */\\n    error OwnableUnauthorizedAccount(address account);\\n\\n    /**\\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\\n     */\\n    error OwnableInvalidOwner(address owner);\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\\n     */\\n    constructor(address initialOwner) {\\n        if (initialOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(initialOwner);\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        if (owner() != _msgSender()) {\\n            revert OwnableUnauthorizedAccount(_msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        if (newOwner == address(0)) {\\n            revert OwnableInvalidOwner(address(0));\\n        }\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\\n\\npragma solidity ^0.8.20;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n\\n    function _contextSuffixLength() internal view virtual returns (uint256) {\\n        return 0;\\n    }\\n}\\n\",\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\"},\"contracts/delegation/FinancialCaveatEnforcer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.23;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\n/**\\n * @title FinancialCaveatEnforcer\\n * @dev Wrapper for MetaMask's built-in financial caveat enforcers\\n * Provides a unified interface for financial restrictions (spending limits, token transfers, etc.)\\n */\\ncontract FinancialCaveatEnforcer is Ownable {\\n    struct SpendingLimit {\\n        address token;\\n        uint256 maxAmount;\\n        uint256 spentAmount;\\n        uint256 validUntil;\\n        uint256 periodLength; // For period-based limits\\n        uint256 currentPeriod;\\n    }\\n\\n    struct TransferLimit {\\n        address token;\\n        uint256 maxTransferAmount;\\n        uint256 dailyLimit;\\n        uint256 usedToday;\\n        uint256 lastResetDay;\\n    }\\n\\n    // Mappings\\n    mapping(bytes32 => SpendingLimit) public spendingLimits;\\n    mapping(bytes32 => TransferLimit) public transferLimits;\\n    mapping(bytes32 => uint256) public timeLimits;\\n    mapping(bytes32 => address[]) public allowedTokens;\\n    mapping(bytes32 => mapping(address => bool)) public tokenWhitelist;\\n\\n    // Events\\n    event SpendingLimitSet(\\n        bytes32 indexed delegationHash,\\n        address indexed token,\\n        uint256 maxAmount,\\n        uint256 validUntil,\\n        uint256 periodLength\\n    );\\n    event TransferLimitSet(\\n        bytes32 indexed delegationHash,\\n        address indexed token,\\n        uint256 maxTransferAmount,\\n        uint256 dailyLimit\\n    );\\n    event TimeLimitSet(bytes32 indexed delegationHash, uint256 validUntil);\\n    event TokenWhitelistSet(bytes32 indexed delegationHash, address[] tokens);\\n    event TokenSpent(bytes32 indexed delegationHash, address indexed token, uint256 amount);\\n\\n    constructor(address initialOwner) Ownable(initialOwner) {}\\n\\n    /**\\n     * @dev Set spending limit for a delegation\\n     * Anyone can set spending limits for their own delegations\\n     */\\n    function setSpendingLimit(\\n        bytes32 delegationHash,\\n        address token,\\n        uint256 maxAmount,\\n        uint256 validUntilTime,\\n        uint256 periodLengthSeconds\\n    ) external {\\n        spendingLimits[delegationHash] = SpendingLimit({\\n            token: token,\\n            maxAmount: maxAmount,\\n            spentAmount: 0,\\n            validUntil: validUntilTime,\\n            periodLength: periodLengthSeconds,\\n            currentPeriod: block.timestamp / periodLengthSeconds\\n        });\\n\\n        emit SpendingLimitSet(delegationHash, token, maxAmount, validUntilTime, periodLengthSeconds);\\n    }\\n\\n    /**\\n     * @dev Set transfer limit for a delegation\\n     * Anyone can set transfer limits for their own delegations\\n     */\\n    function setTransferLimit(\\n        bytes32 delegationHash,\\n        address token,\\n        uint256 maxTransferAmount,\\n        uint256 dailyLimit\\n    ) external {\\n        transferLimits[delegationHash] = TransferLimit({\\n            token: token,\\n            maxTransferAmount: maxTransferAmount,\\n            dailyLimit: dailyLimit,\\n            usedToday: 0,\\n            lastResetDay: block.timestamp / 1 days\\n        });\\n\\n        emit TransferLimitSet(delegationHash, token, maxTransferAmount, dailyLimit);\\n    }\\n\\n    /**\\n     * @dev Set time limit for a delegation\\n     * Anyone can set time limits for their own delegations\\n     */\\n    function setTimeLimit(bytes32 delegationHash, uint256 validUntilTime) external {\\n        timeLimits[delegationHash] = validUntilTime;\\n        emit TimeLimitSet(delegationHash, validUntilTime);\\n    }\\n\\n    /**\\n     * @dev Set token whitelist for a delegation\\n     * Anyone can set token whitelist for their own delegations\\n     */\\n    function setTokenWhitelist(bytes32 delegationHash, address[] calldata tokens) external {\\n        allowedTokens[delegationHash] = tokens;\\n\\n        // Clear existing whitelist\\n        for (uint256 i = 0; i < allowedTokens[delegationHash].length; i++) {\\n            tokenWhitelist[delegationHash][allowedTokens[delegationHash][i]] = false;\\n        }\\n\\n        // Set new whitelist\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            tokenWhitelist[delegationHash][tokens[i]] = true;\\n        }\\n\\n        emit TokenWhitelistSet(delegationHash, tokens);\\n    }\\n\\n    /**\\n     * @dev Set default financial configuration for a delegation\\n     * Anyone can set default config for their own delegations\\n     */\\n    function setDefaultFinancialConfig(bytes32 delegationHash) external {\\n        // Set default spending limit (1 ETH per day)\\n        spendingLimits[delegationHash] = SpendingLimit({\\n            token: address(0),\\n            maxAmount: 1 ether,\\n            spentAmount: 0,\\n            validUntil: block.timestamp + 30 days,\\n            periodLength: 1 days,\\n            currentPeriod: block.timestamp / 1 days\\n        });\\n\\n        // Set default time limit (30 days)\\n        timeLimits[delegationHash] = block.timestamp + 30 days;\\n\\n        // Set default token whitelist (native token only)\\n        address[] memory defaultTokens = new address[](1);\\n        defaultTokens[0] = address(0); // Native token\\n\\n        // Clear existing whitelist\\n        for (uint256 i = 0; i < allowedTokens[delegationHash].length; i++) {\\n            tokenWhitelist[delegationHash][allowedTokens[delegationHash][i]] = false;\\n        }\\n\\n        // Set new whitelist\\n        allowedTokens[delegationHash] = defaultTokens;\\n        for (uint256 i = 0; i < defaultTokens.length; i++) {\\n            tokenWhitelist[delegationHash][defaultTokens[i]] = true;\\n        }\\n    }\\n\\n    /**\\n     * @dev ICaveatEnforcer beforeHook implementation\\n     */\\n    function beforeHook(\\n        bytes calldata terms,\\n        bytes calldata /* args */,\\n        uint256 /* mode */,\\n        bytes calldata executionCalldata,\\n        bytes32 delegationHash\\n    ) external view {\\n        // Decode terms to get caveat type\\n        (string memory caveatType, bytes memory caveatData) = abi.decode(terms, (string, bytes));\\n\\n        if (keccak256(bytes(caveatType)) == keccak256(bytes(\\\"spendingLimit\\\"))) {\\n            _enforceSpendingLimit(caveatData, delegationHash);\\n        } else if (keccak256(bytes(caveatType)) == keccak256(bytes(\\\"transferLimit\\\"))) {\\n            _enforceTransferLimit(caveatData, delegationHash);\\n        } else if (keccak256(bytes(caveatType)) == keccak256(bytes(\\\"timeLimit\\\"))) {\\n            _enforceTimeLimit(caveatData, delegationHash);\\n        } else if (keccak256(bytes(caveatType)) == keccak256(bytes(\\\"tokenWhitelist\\\"))) {\\n            _enforceTokenWhitelist(caveatData, delegationHash, executionCalldata);\\n        }\\n    }\\n\\n    /**\\n     * @dev ICaveatEnforcer afterHook implementation\\n     */\\n    function afterHook(\\n        bytes calldata terms,\\n        bytes calldata /* args */,\\n        uint256 /* mode */,\\n        bytes calldata executionCalldata,\\n        bytes32 delegationHash\\n    ) external {\\n        // Decode terms to get caveat type\\n        (string memory caveatType, bytes memory caveatData) = abi.decode(terms, (string, bytes));\\n\\n        if (keccak256(bytes(caveatType)) == keccak256(bytes(\\\"spendingLimit\\\"))) {\\n            _updateSpendingAmount(caveatData, delegationHash, executionCalldata);\\n        } else if (keccak256(bytes(caveatType)) == keccak256(bytes(\\\"transferLimit\\\"))) {\\n            _updateTransferUsage(caveatData, delegationHash, executionCalldata);\\n        }\\n    }\\n\\n    /**\\n     * @dev Enforce spending limit\\n     */\\n    function _enforceSpendingLimit(bytes memory caveatData, bytes32 delegationHash) internal view {\\n        (address token, uint256 amount) = abi.decode(caveatData, (address, uint256));\\n\\n        SpendingLimit memory limit = spendingLimits[delegationHash];\\n        require(limit.token == token, \\\"Token mismatch\\\");\\n        require(limit.validUntil > block.timestamp, \\\"Spending limit expired\\\");\\n\\n        // Check if we need to reset for new period\\n        uint256 currentPeriod = block.timestamp / limit.periodLength;\\n        if (currentPeriod > limit.currentPeriod) {\\n            // New period, spending resets\\n            require(amount <= limit.maxAmount, \\\"Spending limit exceeded\\\");\\n        } else {\\n            // Same period, check cumulative spending\\n            require(limit.spentAmount + amount <= limit.maxAmount, \\\"Spending limit exceeded\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Enforce transfer limit\\n     */\\n    function _enforceTransferLimit(bytes memory caveatData, bytes32 delegationHash) internal view {\\n        (address token, uint256 amount) = abi.decode(caveatData, (address, uint256));\\n\\n        TransferLimit memory limit = transferLimits[delegationHash];\\n        require(limit.token == token, \\\"Token mismatch\\\");\\n        require(amount <= limit.maxTransferAmount, \\\"Transfer amount exceeds limit\\\");\\n\\n        // Check daily limit\\n        uint256 currentDay = block.timestamp / 1 days;\\n        if (currentDay > limit.lastResetDay) {\\n            // New day, daily usage resets\\n            require(amount <= limit.dailyLimit, \\\"Daily transfer limit exceeded\\\");\\n        } else {\\n            // Same day, check cumulative usage\\n            require(limit.usedToday + amount <= limit.dailyLimit, \\\"Daily transfer limit exceeded\\\");\\n        }\\n    }\\n\\n    /**\\n     * @dev Enforce time limit\\n     */\\n    function _enforceTimeLimit(bytes memory caveatData, bytes32 /* delegationHash */) internal view {\\n        uint256 validUntilTime = abi.decode(caveatData, (uint256));\\n        require(block.timestamp <= validUntilTime, \\\"Delegation expired\\\");\\n    }\\n\\n    /**\\n     * @dev Enforce token whitelist\\n     */\\n    function _enforceTokenWhitelist(\\n        bytes memory caveatData,\\n        bytes32 delegationHash,\\n        bytes calldata executionCalldata\\n    ) internal view {\\n        address[] memory tokens = abi.decode(caveatData, (address[]));\\n\\n        // Extract target from execution calldata (first 20 bytes)\\n        require(executionCalldata.length >= 20, \\\"Invalid calldata length\\\");\\n        address target;\\n        assembly {\\n            target := shr(96, calldataload(executionCalldata.offset))\\n        }\\n\\n        // Check if target is in the whitelist\\n        bool isAllowed = false;\\n        for (uint256 i = 0; i < tokens.length; i++) {\\n            if (tokens[i] == target || tokenWhitelist[delegationHash][tokens[i]]) {\\n                isAllowed = true;\\n                break;\\n            }\\n        }\\n        require(isAllowed, \\\"Token not in whitelist\\\");\\n    }\\n\\n    /**\\n     * @dev Update spent amount after execution\\n     */\\n    function _updateSpendingAmount(\\n        bytes memory caveatData,\\n        bytes32 delegationHash,\\n        bytes calldata /* executionCalldata */\\n    ) internal {\\n        (, uint256 amount) = abi.decode(caveatData, (address, uint256));\\n\\n        SpendingLimit storage limit = spendingLimits[delegationHash];\\n\\n        // Check if we need to reset for new period\\n        uint256 currentPeriod = block.timestamp / limit.periodLength;\\n        if (currentPeriod > limit.currentPeriod) {\\n            // New period, reset spending\\n            limit.currentPeriod = currentPeriod;\\n            limit.spentAmount = amount;\\n        } else {\\n            // Same period, add to existing spending\\n            limit.spentAmount += amount;\\n        }\\n\\n        emit TokenSpent(delegationHash, limit.token, amount);\\n    }\\n\\n    /**\\n     * @dev Update transfer usage after execution\\n     */\\n    function _updateTransferUsage(\\n        bytes memory caveatData,\\n        bytes32 delegationHash,\\n        bytes calldata /* executionCalldata */\\n    ) internal {\\n        (, uint256 amount) = abi.decode(caveatData, (address, uint256));\\n\\n        TransferLimit storage limit = transferLimits[delegationHash];\\n\\n        // Check if we need to reset for new day\\n        uint256 currentDay = block.timestamp / 1 days;\\n        if (currentDay > limit.lastResetDay) {\\n            // New day, reset daily usage\\n            limit.lastResetDay = currentDay;\\n            limit.usedToday = amount;\\n        } else {\\n            // Same day, add to existing usage\\n            limit.usedToday += amount;\\n        }\\n    }\\n\\n    /**\\n     * @dev Get spending limit for a delegation\\n     */\\n    function getSpendingLimit(bytes32 delegationHash) external view returns (SpendingLimit memory) {\\n        return spendingLimits[delegationHash];\\n    }\\n\\n    /**\\n     * @dev Get transfer limit for a delegation\\n     */\\n    function getTransferLimit(bytes32 delegationHash) external view returns (TransferLimit memory) {\\n        return transferLimits[delegationHash];\\n    }\\n\\n    /**\\n     * @dev Get time limit for a delegation\\n     */\\n    function getTimeLimit(bytes32 delegationHash) external view returns (uint256) {\\n        return timeLimits[delegationHash];\\n    }\\n\\n    /**\\n     * @dev Get allowed tokens for a delegation\\n     */\\n    function getAllowedTokens(bytes32 delegationHash) external view returns (address[] memory) {\\n        return allowedTokens[delegationHash];\\n    }\\n\\n    /**\\n     * @dev Check if token is whitelisted for a delegation\\n     */\\n    function isTokenWhitelisted(bytes32 delegationHash, address token) external view returns (bool) {\\n        return tokenWhitelist[delegationHash][token];\\n    }\\n}\\n\",\"keccak256\":\"0x25a46c4448fadfbe1a70b7ad154ac16ebf4c9a426ab032593b9c6e6e0477aebe\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162001def38038062001def8339810160408190526200003491620000c7565b806001600160a01b0381166200006457604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6200006f8162000077565b5050620000f9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000da57600080fd5b81516001600160a01b0381168114620000f257600080fd5b9392505050565b611ce680620001096000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806386289a78116100ad578063a304543f11610071578063a304543f1461035f578063a83c91cf14610372578063e595195b146103eb578063f048ba2f1461044e578063f2fde38b1461047c57600080fd5b806386289a78146102745780638da5cb5b146102945780639e8b9525146102a55780639edacd74146102b8578063a2a2d308146102d857600080fd5b806349bbd4d3116100f457806349bbd4d3146101bf57806354c8aef9146102185780636404e64e14610246578063715018a61461025957806373bc599c1461026157600080fd5b806320ec2c79146101315780632b9e4494146101465780632bc2840b1461017657806339796955146101995780634729e5ed146101ac575b600080fd5b61014461013f3660046116f9565b61048f565b005b610159610154366004611712565b6106d9565b6040516001600160a01b0390911681526020015b60405180910390f35b610189610184366004611749565b610711565b604051901515815260200161016d565b6101446101a73660046117c2565b61073e565b6101446101ba36600461186d565b6108ce565b6101d26101cd3660046116f9565b6109ba565b60405161016d919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080918201519181019190915260a00190565b6102386102263660046116f9565b60036020526000908152604090205481565b60405190815260200161016d565b6101446102543660046118b5565b610a4a565b610144610b24565b61014461026f3660046118f2565b610b38565b6102386102823660046116f9565b60009081526003602052604090205490565b6000546001600160a01b0316610159565b6101446102b33660046117c2565b610c88565b6102cb6102c63660046116f9565b610d56565b60405161016d9190611971565b6103286102e63660046116f9565b60016020819052600091825260409091208054918101546002820154600383015460048401546005909401546001600160a01b03909516949293919290919086565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c00161016d565b61014461036d366004611712565b610dc2565b6103b96103803660046116f9565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039092169392909185565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a00161016d565b6103fe6103f93660046116f9565b610e13565b60405161016d919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201519181019190915260c00190565b61018961045c366004611749565b600560209081526000928352604080842090915290825290205460ff1681565b61014461048a3660046119be565b610eb6565b6040518060c0016040528060006001600160a01b03168152602001670de0b6b3a76400008152602001600081526020014262278d006104ce91906119e2565b815260200162015180815260200162015180426104eb9190611a03565b9052600082815260016020818152604092839020845181546001600160a01b0319166001600160a01b039091161781559084015191810191909155908201516002820155606082015160038201556080820151600482015560a09091015160059091015561055c4262278d006119e2565b600082815260036020526040808220929092558151600180825281840190935290918160200160208202803683370190505090506000816000815181106105a5576105a5611a3b565b60200260200101906001600160a01b031690816001600160a01b03168152505060005b6000838152600460205260409020548110156106475760008381526005602090815260408083206004909252822080548391908590811061060b5761060b611a3b565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790556001016105c8565b50600082815260046020908152604090912082516106679284019061162c565b5060005b81518110156106d457600083815260056020526040812083516001929085908590811061069a5761069a611a3b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161066b565b505050565b600460205281600052604060002081815481106106f557600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b60008061074d898b018b611ada565b60408051808201909152600d81526c1cdc195b991a5b99d31a5b5a5d609a1b60209182015282519083012091935091507f1ebb2c3c329772f0bf9016cb7b6e0fc6cd884fa3d60a986ea3f882434596af2b016107b2576107ad8184610ef9565b6108c2565b60408051808201909152600d81526c1d1c985b9cd9995c931a5b5a5d609a1b6020918201528251908301207ff02e969f561db1c961c18611c70d505036e3b28979e10e9f03462f6c3566f6a10161080d576107ad81846110d9565b6040805180820190915260098152681d1a5b59531a5b5a5d60ba1b6020918201528251908301207f1cd78c64331fe88a151d2a352952c7b81c81885722ee6bdce6e217ff32be5bdb01610864576107ad81846112b4565b60408051808201909152600e81526d1d1bdad95b95da1a5d195b1a5cdd60921b6020918201528251908301207fb5040524738ec66783ecc2cc0b39e15f12504c935c6a987faf93d4489211c0e4016108c2576108c281848787611311565b50505050505050505050565b6040518060c00160405280856001600160a01b0316815260200184815260200160008152602001838152602001828152602001824261090d9190611a03565b9052600086815260016020818152604092839020845181546001600160a01b0319166001600160a01b03918216178255858301519382019390935584840151600282015560608086015160038301556080860151600483015560a090950151600590910155825187815290810186905291820184905286169187917fc5bc72739c823030ba17ef8f5d8eb70424e1a45963a12fb36c959bd036930321910160405180910390a35050505050565b6109f56040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b50600090815260026020818152604092839020835160a08101855281546001600160a01b0316815260018201549281019290925291820154928101929092526003810154606083015260040154608082015290565b6040518060a00160405280846001600160a01b03168152602001838152602001828152602001600081526020016201518042610a869190611a03565b9052600085815260026020818152604092839020845181546001600160a01b0319166001600160a01b03918216178255858301516001830155858501519382019390935560608501516003820155608090940151600490940193909355815185815292830184905285169186917f7c6225af3c0bebc77816f00c851997a91b0f364ae2b530e744c0ba6905aa830a910160405180910390a350505050565b610b2c611475565b610b3660006114a2565b565b6000838152600460205260409020610b51908383611691565b5060005b600084815260046020526040902054811015610bd457600084815260056020908152604080832060049092528220805483919085908110610b9857610b98611a3b565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101610b55565b5060005b81811015610c48576000848152600560205260408120600191858585818110610c0357610c03611a3b565b9050602002016020810190610c1891906119be565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610bd8565b50827fdeb7405f5c9bc627a28af606adb3d16706c6b04a8b78775a12b2048a6d0dd75e8383604051610c7b929190611b69565b60405180910390a2505050565b600080610c97898b018b611ada565b60408051808201909152600d81526c1cdc195b991a5b99d31a5b5a5d609a1b60209182015282519083012091935091507f1ebb2c3c329772f0bf9016cb7b6e0fc6cd884fa3d60a986ea3f882434596af2b01610cf9576107ad818487876114f2565b60408051808201909152600d81526c1d1c985b9cd9995c931a5b5a5d609a1b6020918201528251908301207ff02e969f561db1c961c18611c70d505036e3b28979e10e9f03462f6c3566f6a1016108c2576108c2818487876115b2565b600081815260046020908152604091829020805483518184028101840190945280845260609392830182828015610db657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d98575b50505050509050919050565b600082815260036020526040908190208290555182907f59ab0ada8e461df8a5b8cf1ae5ee6c0a0a122358a516ee7408a9797089d6a15790610e079084815260200190565b60405180910390a25050565b610e556040518060c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b50600090815260016020818152604092839020835160c08101855281546001600160a01b031681529281015491830191909152600281015492820192909252600382015460608201526004820154608082015260059091015460a082015290565b610ebe611475565b6001600160a01b038116610eed57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610ef6816114a2565b50565b60008083806020019051810190610f109190611bb7565b600085815260016020818152604092839020835160c08101855281546001600160a01b03908116808352948301549382019390935260028201549481019490945260038101546060850152600481015460808501526005015460a084015293955091935091841614610fb55760405162461bcd60e51b815260206004820152600e60248201526d0a8ded6cadc40dad2e6dac2e8c6d60931b6044820152606401610ee4565b428160600151116110015760405162461bcd60e51b815260206004820152601660248201527514dc195b991a5b99c81b1a5b5a5d08195e1c1a5c995960521b6044820152606401610ee4565b60008160800151426110139190611a03565b90508160a0015181111561107457816020015183111561106f5760405162461bcd60e51b815260206004820152601760248201527614dc195b991a5b99c81b1a5b5a5d08195e18d959591959604a1b6044820152606401610ee4565b6110d1565b816020015183836040015161108991906119e2565b11156110d15760405162461bcd60e51b815260206004820152601760248201527614dc195b991a5b99c81b1a5b5a5d08195e18d959591959604a1b6044820152606401610ee4565b505050505050565b600080838060200190518101906110f09190611bb7565b600085815260026020818152604092839020835160a08101855281546001600160a01b03908116808352600184015494830194909452938201549481019490945260038101546060850152600401546080840152939550919350919084161461118c5760405162461bcd60e51b815260206004820152600e60248201526d0a8ded6cadc40dad2e6dac2e8c6d60931b6044820152606401610ee4565b80602001518211156111e05760405162461bcd60e51b815260206004820152601d60248201527f5472616e7366657220616d6f756e742065786365656473206c696d69740000006044820152606401610ee4565b60006111ef6201518042611a03565b9050816080015181111561125157816040015183111561106f5760405162461bcd60e51b815260206004820152601d60248201527f4461696c79207472616e73666572206c696d69742065786365656465640000006044820152606401610ee4565b816040015183836060015161126691906119e2565b11156110d15760405162461bcd60e51b815260206004820152601d60248201527f4461696c79207472616e73666572206c696d69742065786365656465640000006044820152606401610ee4565b6000828060200190518101906112ca9190611be5565b9050804211156106d45760405162461bcd60e51b815260206004820152601260248201527111195b1959d85d1a5bdb88195e1c1a5c995960721b6044820152606401610ee4565b6000848060200190518101906113279190611bfe565b9050601482101561137a5760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616c6c64617461206c656e6774680000000000000000006044820152606401610ee4565b823560601c6000805b835181101561142557826001600160a01b03168482815181106113a8576113a8611a3b565b60200260200101516001600160a01b0316148061140f57506005600088815260200190815260200160002060008583815181106113e7576113e7611a3b565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff165b1561141d5760019150611425565b600101611383565b508061146c5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b881b9bdd081a5b881dda1a5d195b1a5cdd60521b6044820152606401610ee4565b50505050505050565b6000546001600160a01b03163314610b365760405163118cdaa760e01b8152336004820152602401610ee4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000848060200190518101906115089190611bb7565b6000868152600160205260408120600481015492945092509061152b9042611a03565b9050816005015481111561154c576005820181905560028201839055611566565b8282600201600082825461156091906119e2565b90915550505b81546040518481526001600160a01b039091169087907f8d6997438d8acfb05f9bb1a52a6a08b21de7dc6df4ca7bae9bccbf64e5ba4d929060200160405180910390a350505050505050565b6000848060200190518101906115c89190611bb7565b60008681526002602052604081209193509091506115e96201518042611a03565b9050816004015481111561160a57600482018190556003820183905561146c565b8282600301600082825461161e91906119e2565b909155505050505050505050565b828054828255906000526020600020908101928215611681579160200282015b8281111561168157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061164c565b5061168d9291506116e4565b5090565b828054828255906000526020600020908101928215611681579160200282015b828111156116815781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906116b1565b5b8082111561168d57600081556001016116e5565b60006020828403121561170b57600080fd5b5035919050565b6000806040838503121561172557600080fd5b50508035926020909101359150565b6001600160a01b0381168114610ef657600080fd5b6000806040838503121561175c57600080fd5b82359150602083013561176e81611734565b809150509250929050565b60008083601f84011261178b57600080fd5b50813567ffffffffffffffff8111156117a357600080fd5b6020830191508360208285010111156117bb57600080fd5b9250929050565b60008060008060008060008060a0898b0312156117de57600080fd5b883567ffffffffffffffff808211156117f657600080fd5b6118028c838d01611779565b909a50985060208b013591508082111561181b57600080fd5b6118278c838d01611779565b909850965060408b0135955060608b013591508082111561184757600080fd5b506118548b828c01611779565b999c989b50969995989497949560800135949350505050565b600080600080600060a0868803121561188557600080fd5b85359450602086013561189781611734565b94979496505050506040830135926060810135926080909101359150565b600080600080608085870312156118cb57600080fd5b8435935060208501356118dd81611734565b93969395505050506040820135916060013590565b60008060006040848603121561190757600080fd5b83359250602084013567ffffffffffffffff8082111561192657600080fd5b818601915086601f83011261193a57600080fd5b81358181111561194957600080fd5b8760208260051b850101111561195e57600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b818110156119b25783516001600160a01b03168352928401929184019160010161198d565b50909695505050505050565b6000602082840312156119d057600080fd5b81356119db81611734565b9392505050565b8082018082111561073857634e487b7160e01b600052601160045260246000fd5b600082611a2057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a7a57611a7a611a25565b604052919050565b600067ffffffffffffffff831115611a9c57611a9c611a25565b611aaf601f8401601f1916602001611a51565b9050828152838383011115611ac357600080fd5b828260208301376000602084830101529392505050565b60008060408385031215611aed57600080fd5b823567ffffffffffffffff80821115611b0557600080fd5b818501915085601f830112611b1957600080fd5b611b2886833560208501611a82565b93506020850135915080821115611b3e57600080fd5b508301601f81018513611b5057600080fd5b611b5f85823560208401611a82565b9150509250929050565b60208082528181018390526000908460408401835b86811015611bac578235611b9181611734565b6001600160a01b031682529183019190830190600101611b7e565b509695505050505050565b60008060408385031215611bca57600080fd5b8251611bd581611734565b6020939093015192949293505050565b600060208284031215611bf757600080fd5b5051919050565b60006020808385031215611c1157600080fd5b825167ffffffffffffffff80821115611c2957600080fd5b818501915085601f830112611c3d57600080fd5b815181811115611c4f57611c4f611a25565b8060051b9150611c60848301611a51565b8181529183018401918481019088841115611c7a57600080fd5b938501935b83851015611ca45784519250611c9483611734565b8282529385019390850190611c7f565b9897505050505050505056fea2646970667358221220b42b0b9954b1eb2ce65f2b18529e95b5c5b7d34c6a9831e981819f148c669e3764736f6c63430008170033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061012c5760003560e01c806386289a78116100ad578063a304543f11610071578063a304543f1461035f578063a83c91cf14610372578063e595195b146103eb578063f048ba2f1461044e578063f2fde38b1461047c57600080fd5b806386289a78146102745780638da5cb5b146102945780639e8b9525146102a55780639edacd74146102b8578063a2a2d308146102d857600080fd5b806349bbd4d3116100f457806349bbd4d3146101bf57806354c8aef9146102185780636404e64e14610246578063715018a61461025957806373bc599c1461026157600080fd5b806320ec2c79146101315780632b9e4494146101465780632bc2840b1461017657806339796955146101995780634729e5ed146101ac575b600080fd5b61014461013f3660046116f9565b61048f565b005b610159610154366004611712565b6106d9565b6040516001600160a01b0390911681526020015b60405180910390f35b610189610184366004611749565b610711565b604051901515815260200161016d565b6101446101a73660046117c2565b61073e565b6101446101ba36600461186d565b6108ce565b6101d26101cd3660046116f9565b6109ba565b60405161016d919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080918201519181019190915260a00190565b6102386102263660046116f9565b60036020526000908152604090205481565b60405190815260200161016d565b6101446102543660046118b5565b610a4a565b610144610b24565b61014461026f3660046118f2565b610b38565b6102386102823660046116f9565b60009081526003602052604090205490565b6000546001600160a01b0316610159565b6101446102b33660046117c2565b610c88565b6102cb6102c63660046116f9565b610d56565b60405161016d9190611971565b6103286102e63660046116f9565b60016020819052600091825260409091208054918101546002820154600383015460048401546005909401546001600160a01b03909516949293919290919086565b604080516001600160a01b0390971687526020870195909552938501929092526060840152608083015260a082015260c00161016d565b61014461036d366004611712565b610dc2565b6103b96103803660046116f9565b6002602081905260009182526040909120805460018201549282015460038301546004909301546001600160a01b039092169392909185565b604080516001600160a01b0390961686526020860194909452928401919091526060830152608082015260a00161016d565b6103fe6103f93660046116f9565b610e13565b60405161016d919081516001600160a01b031681526020808301519082015260408083015190820152606080830151908201526080808301519082015260a0918201519181019190915260c00190565b61018961045c366004611749565b600560209081526000928352604080842090915290825290205460ff1681565b61014461048a3660046119be565b610eb6565b6040518060c0016040528060006001600160a01b03168152602001670de0b6b3a76400008152602001600081526020014262278d006104ce91906119e2565b815260200162015180815260200162015180426104eb9190611a03565b9052600082815260016020818152604092839020845181546001600160a01b0319166001600160a01b039091161781559084015191810191909155908201516002820155606082015160038201556080820151600482015560a09091015160059091015561055c4262278d006119e2565b600082815260036020526040808220929092558151600180825281840190935290918160200160208202803683370190505090506000816000815181106105a5576105a5611a3b565b60200260200101906001600160a01b031690816001600160a01b03168152505060005b6000838152600460205260409020548110156106475760008381526005602090815260408083206004909252822080548391908590811061060b5761060b611a3b565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff19169115159190911790556001016105c8565b50600082815260046020908152604090912082516106679284019061162c565b5060005b81518110156106d457600083815260056020526040812083516001929085908590811061069a5761069a611a3b565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905560010161066b565b505050565b600460205281600052604060002081815481106106f557600080fd5b6000918252602090912001546001600160a01b03169150829050565b60008281526005602090815260408083206001600160a01b038516845290915290205460ff165b92915050565b60008061074d898b018b611ada565b60408051808201909152600d81526c1cdc195b991a5b99d31a5b5a5d609a1b60209182015282519083012091935091507f1ebb2c3c329772f0bf9016cb7b6e0fc6cd884fa3d60a986ea3f882434596af2b016107b2576107ad8184610ef9565b6108c2565b60408051808201909152600d81526c1d1c985b9cd9995c931a5b5a5d609a1b6020918201528251908301207ff02e969f561db1c961c18611c70d505036e3b28979e10e9f03462f6c3566f6a10161080d576107ad81846110d9565b6040805180820190915260098152681d1a5b59531a5b5a5d60ba1b6020918201528251908301207f1cd78c64331fe88a151d2a352952c7b81c81885722ee6bdce6e217ff32be5bdb01610864576107ad81846112b4565b60408051808201909152600e81526d1d1bdad95b95da1a5d195b1a5cdd60921b6020918201528251908301207fb5040524738ec66783ecc2cc0b39e15f12504c935c6a987faf93d4489211c0e4016108c2576108c281848787611311565b50505050505050505050565b6040518060c00160405280856001600160a01b0316815260200184815260200160008152602001838152602001828152602001824261090d9190611a03565b9052600086815260016020818152604092839020845181546001600160a01b0319166001600160a01b03918216178255858301519382019390935584840151600282015560608086015160038301556080860151600483015560a090950151600590910155825187815290810186905291820184905286169187917fc5bc72739c823030ba17ef8f5d8eb70424e1a45963a12fb36c959bd036930321910160405180910390a35050505050565b6109f56040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001600081525090565b50600090815260026020818152604092839020835160a08101855281546001600160a01b0316815260018201549281019290925291820154928101929092526003810154606083015260040154608082015290565b6040518060a00160405280846001600160a01b03168152602001838152602001828152602001600081526020016201518042610a869190611a03565b9052600085815260026020818152604092839020845181546001600160a01b0319166001600160a01b03918216178255858301516001830155858501519382019390935560608501516003820155608090940151600490940193909355815185815292830184905285169186917f7c6225af3c0bebc77816f00c851997a91b0f364ae2b530e744c0ba6905aa830a910160405180910390a350505050565b610b2c611475565b610b3660006114a2565b565b6000838152600460205260409020610b51908383611691565b5060005b600084815260046020526040902054811015610bd457600084815260056020908152604080832060049092528220805483919085908110610b9857610b98611a3b565b6000918252602080832091909101546001600160a01b031683528201929092526040019020805460ff1916911515919091179055600101610b55565b5060005b81811015610c48576000848152600560205260408120600191858585818110610c0357610c03611a3b565b9050602002016020810190610c1891906119be565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055600101610bd8565b50827fdeb7405f5c9bc627a28af606adb3d16706c6b04a8b78775a12b2048a6d0dd75e8383604051610c7b929190611b69565b60405180910390a2505050565b600080610c97898b018b611ada565b60408051808201909152600d81526c1cdc195b991a5b99d31a5b5a5d609a1b60209182015282519083012091935091507f1ebb2c3c329772f0bf9016cb7b6e0fc6cd884fa3d60a986ea3f882434596af2b01610cf9576107ad818487876114f2565b60408051808201909152600d81526c1d1c985b9cd9995c931a5b5a5d609a1b6020918201528251908301207ff02e969f561db1c961c18611c70d505036e3b28979e10e9f03462f6c3566f6a1016108c2576108c2818487876115b2565b600081815260046020908152604091829020805483518184028101840190945280845260609392830182828015610db657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d98575b50505050509050919050565b600082815260036020526040908190208290555182907f59ab0ada8e461df8a5b8cf1ae5ee6c0a0a122358a516ee7408a9797089d6a15790610e079084815260200190565b60405180910390a25050565b610e556040518060c0016040528060006001600160a01b0316815260200160008152602001600081526020016000815260200160008152602001600081525090565b50600090815260016020818152604092839020835160c08101855281546001600160a01b031681529281015491830191909152600281015492820192909252600382015460608201526004820154608082015260059091015460a082015290565b610ebe611475565b6001600160a01b038116610eed57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b610ef6816114a2565b50565b60008083806020019051810190610f109190611bb7565b600085815260016020818152604092839020835160c08101855281546001600160a01b03908116808352948301549382019390935260028201549481019490945260038101546060850152600481015460808501526005015460a084015293955091935091841614610fb55760405162461bcd60e51b815260206004820152600e60248201526d0a8ded6cadc40dad2e6dac2e8c6d60931b6044820152606401610ee4565b428160600151116110015760405162461bcd60e51b815260206004820152601660248201527514dc195b991a5b99c81b1a5b5a5d08195e1c1a5c995960521b6044820152606401610ee4565b60008160800151426110139190611a03565b90508160a0015181111561107457816020015183111561106f5760405162461bcd60e51b815260206004820152601760248201527614dc195b991a5b99c81b1a5b5a5d08195e18d959591959604a1b6044820152606401610ee4565b6110d1565b816020015183836040015161108991906119e2565b11156110d15760405162461bcd60e51b815260206004820152601760248201527614dc195b991a5b99c81b1a5b5a5d08195e18d959591959604a1b6044820152606401610ee4565b505050505050565b600080838060200190518101906110f09190611bb7565b600085815260026020818152604092839020835160a08101855281546001600160a01b03908116808352600184015494830194909452938201549481019490945260038101546060850152600401546080840152939550919350919084161461118c5760405162461bcd60e51b815260206004820152600e60248201526d0a8ded6cadc40dad2e6dac2e8c6d60931b6044820152606401610ee4565b80602001518211156111e05760405162461bcd60e51b815260206004820152601d60248201527f5472616e7366657220616d6f756e742065786365656473206c696d69740000006044820152606401610ee4565b60006111ef6201518042611a03565b9050816080015181111561125157816040015183111561106f5760405162461bcd60e51b815260206004820152601d60248201527f4461696c79207472616e73666572206c696d69742065786365656465640000006044820152606401610ee4565b816040015183836060015161126691906119e2565b11156110d15760405162461bcd60e51b815260206004820152601d60248201527f4461696c79207472616e73666572206c696d69742065786365656465640000006044820152606401610ee4565b6000828060200190518101906112ca9190611be5565b9050804211156106d45760405162461bcd60e51b815260206004820152601260248201527111195b1959d85d1a5bdb88195e1c1a5c995960721b6044820152606401610ee4565b6000848060200190518101906113279190611bfe565b9050601482101561137a5760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616c6c64617461206c656e6774680000000000000000006044820152606401610ee4565b823560601c6000805b835181101561142557826001600160a01b03168482815181106113a8576113a8611a3b565b60200260200101516001600160a01b0316148061140f57506005600088815260200190815260200160002060008583815181106113e7576113e7611a3b565b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff165b1561141d5760019150611425565b600101611383565b508061146c5760405162461bcd60e51b8152602060048201526016602482015275151bdad95b881b9bdd081a5b881dda1a5d195b1a5cdd60521b6044820152606401610ee4565b50505050505050565b6000546001600160a01b03163314610b365760405163118cdaa760e01b8152336004820152602401610ee4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000848060200190518101906115089190611bb7565b6000868152600160205260408120600481015492945092509061152b9042611a03565b9050816005015481111561154c576005820181905560028201839055611566565b8282600201600082825461156091906119e2565b90915550505b81546040518481526001600160a01b039091169087907f8d6997438d8acfb05f9bb1a52a6a08b21de7dc6df4ca7bae9bccbf64e5ba4d929060200160405180910390a350505050505050565b6000848060200190518101906115c89190611bb7565b60008681526002602052604081209193509091506115e96201518042611a03565b9050816004015481111561160a57600482018190556003820183905561146c565b8282600301600082825461161e91906119e2565b909155505050505050505050565b828054828255906000526020600020908101928215611681579160200282015b8281111561168157825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061164c565b5061168d9291506116e4565b5090565b828054828255906000526020600020908101928215611681579160200282015b828111156116815781546001600160a01b0319166001600160a01b038435161782556020909201916001909101906116b1565b5b8082111561168d57600081556001016116e5565b60006020828403121561170b57600080fd5b5035919050565b6000806040838503121561172557600080fd5b50508035926020909101359150565b6001600160a01b0381168114610ef657600080fd5b6000806040838503121561175c57600080fd5b82359150602083013561176e81611734565b809150509250929050565b60008083601f84011261178b57600080fd5b50813567ffffffffffffffff8111156117a357600080fd5b6020830191508360208285010111156117bb57600080fd5b9250929050565b60008060008060008060008060a0898b0312156117de57600080fd5b883567ffffffffffffffff808211156117f657600080fd5b6118028c838d01611779565b909a50985060208b013591508082111561181b57600080fd5b6118278c838d01611779565b909850965060408b0135955060608b013591508082111561184757600080fd5b506118548b828c01611779565b999c989b50969995989497949560800135949350505050565b600080600080600060a0868803121561188557600080fd5b85359450602086013561189781611734565b94979496505050506040830135926060810135926080909101359150565b600080600080608085870312156118cb57600080fd5b8435935060208501356118dd81611734565b93969395505050506040820135916060013590565b60008060006040848603121561190757600080fd5b83359250602084013567ffffffffffffffff8082111561192657600080fd5b818601915086601f83011261193a57600080fd5b81358181111561194957600080fd5b8760208260051b850101111561195e57600080fd5b6020830194508093505050509250925092565b6020808252825182820181905260009190848201906040850190845b818110156119b25783516001600160a01b03168352928401929184019160010161198d565b50909695505050505050565b6000602082840312156119d057600080fd5b81356119db81611734565b9392505050565b8082018082111561073857634e487b7160e01b600052601160045260246000fd5b600082611a2057634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611a7a57611a7a611a25565b604052919050565b600067ffffffffffffffff831115611a9c57611a9c611a25565b611aaf601f8401601f1916602001611a51565b9050828152838383011115611ac357600080fd5b828260208301376000602084830101529392505050565b60008060408385031215611aed57600080fd5b823567ffffffffffffffff80821115611b0557600080fd5b818501915085601f830112611b1957600080fd5b611b2886833560208501611a82565b93506020850135915080821115611b3e57600080fd5b508301601f81018513611b5057600080fd5b611b5f85823560208401611a82565b9150509250929050565b60208082528181018390526000908460408401835b86811015611bac578235611b9181611734565b6001600160a01b031682529183019190830190600101611b7e565b509695505050505050565b60008060408385031215611bca57600080fd5b8251611bd581611734565b6020939093015192949293505050565b600060208284031215611bf757600080fd5b5051919050565b60006020808385031215611c1157600080fd5b825167ffffffffffffffff80821115611c2957600080fd5b818501915085601f830112611c3d57600080fd5b815181811115611c4f57611c4f611a25565b8060051b9150611c60848301611a51565b8181529183018401918481019088841115611c7a57600080fd5b938501935b83851015611ca45784519250611c9483611734565b8282529385019390850190611c7f565b9897505050505050505056fea2646970667358221220b42b0b9954b1eb2ce65f2b18529e95b5c5b7d34c6a9831e981819f148c669e3764736f6c63430008170033",
  "devdoc": {
    "details": "Wrapper for MetaMask's built-in financial caveat enforcers Provides a unified interface for financial restrictions (spending limits, token transfers, etc.)",
    "errors": {
      "OwnableInvalidOwner(address)": [
        {
          "details": "The owner is not a valid owner account. (eg. `address(0)`)"
        }
      ],
      "OwnableUnauthorizedAccount(address)": [
        {
          "details": "The caller account is not authorized to perform an operation."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "afterHook(bytes,bytes,uint256,bytes,bytes32)": {
        "details": "ICaveatEnforcer afterHook implementation"
      },
      "beforeHook(bytes,bytes,uint256,bytes,bytes32)": {
        "details": "ICaveatEnforcer beforeHook implementation"
      },
      "getAllowedTokens(bytes32)": {
        "details": "Get allowed tokens for a delegation"
      },
      "getSpendingLimit(bytes32)": {
        "details": "Get spending limit for a delegation"
      },
      "getTimeLimit(bytes32)": {
        "details": "Get time limit for a delegation"
      },
      "getTransferLimit(bytes32)": {
        "details": "Get transfer limit for a delegation"
      },
      "isTokenWhitelisted(bytes32,address)": {
        "details": "Check if token is whitelisted for a delegation"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setDefaultFinancialConfig(bytes32)": {
        "details": "Set default financial configuration for a delegation Anyone can set default config for their own delegations"
      },
      "setSpendingLimit(bytes32,address,uint256,uint256,uint256)": {
        "details": "Set spending limit for a delegation Anyone can set spending limits for their own delegations"
      },
      "setTimeLimit(bytes32,uint256)": {
        "details": "Set time limit for a delegation Anyone can set time limits for their own delegations"
      },
      "setTokenWhitelist(bytes32,address[])": {
        "details": "Set token whitelist for a delegation Anyone can set token whitelist for their own delegations"
      },
      "setTransferLimit(bytes32,address,uint256,uint256)": {
        "details": "Set transfer limit for a delegation Anyone can set transfer limits for their own delegations"
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "FinancialCaveatEnforcer",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 387,
        "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 19499,
        "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
        "label": "spendingLimits",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_struct(SpendingLimit)19483_storage)"
      },
      {
        "astId": 19504,
        "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
        "label": "transferLimits",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_bytes32,t_struct(TransferLimit)19494_storage)"
      },
      {
        "astId": 19508,
        "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
        "label": "timeLimits",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_bytes32,t_uint256)"
      },
      {
        "astId": 19513,
        "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
        "label": "allowedTokens",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_array(t_address)dyn_storage)"
      },
      {
        "astId": 19519,
        "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
        "label": "tokenWhitelist",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_bytes32,t_mapping(t_address,t_bool))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_array(t_address)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address[])",
        "numberOfBytes": "32",
        "value": "t_array(t_address)dyn_storage"
      },
      "t_mapping(t_bytes32,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_bytes32,t_struct(SpendingLimit)19483_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct FinancialCaveatEnforcer.SpendingLimit)",
        "numberOfBytes": "32",
        "value": "t_struct(SpendingLimit)19483_storage"
      },
      "t_mapping(t_bytes32,t_struct(TransferLimit)19494_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct FinancialCaveatEnforcer.TransferLimit)",
        "numberOfBytes": "32",
        "value": "t_struct(TransferLimit)19494_storage"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(SpendingLimit)19483_storage": {
        "encoding": "inplace",
        "label": "struct FinancialCaveatEnforcer.SpendingLimit",
        "members": [
          {
            "astId": 19472,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 19474,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "maxAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 19476,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "spentAmount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 19478,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "validUntil",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 19480,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "periodLength",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 19482,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "currentPeriod",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_struct(TransferLimit)19494_storage": {
        "encoding": "inplace",
        "label": "struct FinancialCaveatEnforcer.TransferLimit",
        "members": [
          {
            "astId": 19485,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "token",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 19487,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "maxTransferAmount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 19489,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "dailyLimit",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 19491,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "usedToday",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 19493,
            "contract": "contracts/delegation/FinancialCaveatEnforcer.sol:FinancialCaveatEnforcer",
            "label": "lastResetDay",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}